// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"time"
)

// Defines values for ConfirmRequestMime.
const (
	ConfirmRequestMimeImageavif ConfirmRequestMime = "image/avif"
	ConfirmRequestMimeImagejpeg ConfirmRequestMime = "image/jpeg"
	ConfirmRequestMimeImagepng  ConfirmRequestMime = "image/png"
	ConfirmRequestMimeImagewebp ConfirmRequestMime = "image/webp"
)

// Defines values for ImageRole.
const (
	Gallery ImageRole = "gallery"
	Main    ImageRole = "main"
	Other   ImageRole = "other"
)

// Defines values for ImageStatus.
const (
	Deleted    ImageStatus = "deleted"
	Failed     ImageStatus = "failed"
	Pending    ImageStatus = "pending"
	Processing ImageStatus = "processing"
	Ready      ImageStatus = "ready"
	Uploaded   ImageStatus = "uploaded"
)

// Defines values for OwnerType.
const (
	Product      OwnerType = "product"
	ProductDraft OwnerType = "productDraft"
	User         OwnerType = "user"
)

// Defines values for PresignRequestContentType.
const (
	PresignRequestContentTypeImageavif PresignRequestContentType = "image/avif"
	PresignRequestContentTypeImagejpeg PresignRequestContentType = "image/jpeg"
	PresignRequestContentTypeImagepng  PresignRequestContentType = "image/png"
	PresignRequestContentTypeImagewebp PresignRequestContentType = "image/webp"
)

// Defines values for GetDeliveryUrlParamsFit.
const (
	Contain GetDeliveryUrlParamsFit = "contain"
	Cover   GetDeliveryUrlParamsFit = "cover"
	Fill    GetDeliveryUrlParamsFit = "fill"
	Inside  GetDeliveryUrlParamsFit = "inside"
	Outside GetDeliveryUrlParamsFit = "outside"
)

// Defines values for GetDeliveryUrlParamsFormat.
const (
	Avif     GetDeliveryUrlParamsFormat = "avif"
	Jpeg     GetDeliveryUrlParamsFormat = "jpeg"
	Original GetDeliveryUrlParamsFormat = "original"
	Png      GetDeliveryUrlParamsFormat = "png"
	Webp     GetDeliveryUrlParamsFormat = "webp"
)

// ConfirmRequest defines model for ConfirmRequest.
type ConfirmRequest struct {
	Alt string `json:"alt"`

	// Checksum e.g., SHA256 hex for additional integrity check
	Checksum *string `json:"checksum"`

	// Key S3 key that was used for PUT
	Key       string             `json:"key"`
	Mime      ConfirmRequestMime `json:"mime"`
	OwnerId   string             `json:"ownerId"`
	OwnerType OwnerType          `json:"ownerType"`
	Role      ImageRole          `json:"role"`
}

// ConfirmRequestMime defines model for ConfirmRequest.Mime.
type ConfirmRequestMime string

// Image defines model for Image.
type Image struct {
	Alt       string    `json:"alt"`
	CreatedAt time.Time `json:"createdAt"`
	Hash      *string   `json:"hash"`
	Id        string    `json:"id"`

	// Key S3 key of the original image
	Key        string      `json:"key"`
	Mime       string      `json:"mime"`
	ModifiedAt time.Time   `json:"modifiedAt"`
	OwnerId    string      `json:"ownerId"`
	OwnerType  OwnerType   `json:"ownerType"`
	Role       ImageRole   `json:"role"`
	Size       int         `json:"size"`
	Status     ImageStatus `json:"status"`

	// Url Optional — direct URL if public or via proxy
	Url      *string    `json:"url"`
	Variants *[]Variant `json:"variants,omitempty"`
}

// ImagePatch defines model for ImagePatch.
type ImagePatch struct {
	Alt *string `json:"alt,omitempty"`

	// Order Position in the product gallery
	Order *int       `json:"order,omitempty"`
	Role  *ImageRole `json:"role,omitempty"`
}

// ImageRole defines model for ImageRole.
type ImageRole string

// ImageStatus defines model for ImageStatus.
type ImageStatus string

// OwnerType defines model for OwnerType.
type OwnerType string

// PresignRequest defines model for PresignRequest.
type PresignRequest struct {
	ContentType PresignRequestContentType `json:"contentType"`
	Filename    string                    `json:"filename"`

	// OwnerId Draft ID or owner ID
	OwnerId   string    `json:"ownerId"`
	OwnerType OwnerType `json:"ownerType"`
	Role      ImageRole `json:"role"`

	// Size Size in bytes
	Size int `json:"size"`
}

// PresignRequestContentType defines model for PresignRequest.ContentType.
type PresignRequestContentType string

// PresignResponse defines model for PresignResponse.
type PresignResponse struct {
	// ExpiresIn TTL in seconds
	ExpiresIn int `json:"expiresIn"`

	// Key Final S3 key to PUT to
	Key             string            `json:"key"`
	RequiredHeaders map[string]string `json:"requiredHeaders"`
	UploadUrl       string            `json:"uploadUrl"`
}

// Problem RFC7807 Problem Details
type Problem struct {
	Detail *string `json:"detail,omitempty"`
	Errors *[]struct {
		Field   *string `json:"field,omitempty"`
		Message *string `json:"message,omitempty"`
	} `json:"errors,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Status   int     `json:"status"`
	Title    string  `json:"title"`
	TraceId  *string `json:"traceId,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// PromoteRequest defines model for PromoteRequest.
type PromoteRequest struct {
	DraftId string `json:"draftId"`

	// Images If omitted — promote all images of the draft
	Images *[]string `json:"images,omitempty"`

	// Move If true — copy to products/{productId}/... and remove old objects
	Move      bool   `json:"move"`
	ProductId string `json:"productId"`
}

// Variant defines model for Variant.
type Variant struct {
	Height *int `json:"height,omitempty"`

	// Key S3 key of the variant
	Key   *string `json:"key,omitempty"`
	Mime  *string `json:"mime,omitempty"`
	Name  *string `json:"name,omitempty"`
	Size  *int    `json:"size,omitempty"`
	Width *int    `json:"width,omitempty"`
}

// ListImagesParams defines parameters for ListImages.
type ListImagesParams struct {
	OwnerType *OwnerType   `form:"ownerType,omitempty" json:"ownerType,omitempty"`
	OwnerId   *string      `form:"ownerId,omitempty" json:"ownerId,omitempty"`
	Status    *ImageStatus `form:"status,omitempty" json:"status,omitempty"`
	Page      *int         `form:"page,omitempty" json:"page,omitempty"`
	PageSize  *int         `form:"pageSize,omitempty" json:"pageSize,omitempty"`
}

// DeleteImageParams defines parameters for DeleteImage.
type DeleteImageParams struct {
	Hard *bool `form:"hard,omitempty" json:"hard,omitempty"`
}

// GetDeliveryUrlParams defines parameters for GetDeliveryUrl.
type GetDeliveryUrlParams struct {
	Variant    *string                     `form:"variant,omitempty" json:"variant,omitempty"`
	W          *int                        `form:"w,omitempty" json:"w,omitempty"`
	H          *int                        `form:"h,omitempty" json:"h,omitempty"`
	Fit        *GetDeliveryUrlParamsFit    `form:"fit,omitempty" json:"fit,omitempty"`
	Format     *GetDeliveryUrlParamsFormat `form:"format,omitempty" json:"format,omitempty"`
	Quality    *int                        `form:"quality,omitempty" json:"quality,omitempty"`
	Dpr        *float32                    `form:"dpr,omitempty" json:"dpr,omitempty"`
	TtlSeconds *int                        `form:"ttlSeconds,omitempty" json:"ttlSeconds,omitempty"`
}

// GetDeliveryUrlParamsFit defines parameters for GetDeliveryUrl.
type GetDeliveryUrlParamsFit string

// GetDeliveryUrlParamsFormat defines parameters for GetDeliveryUrl.
type GetDeliveryUrlParamsFormat string

// ProcessImageJSONBody defines parameters for ProcessImage.
type ProcessImageJSONBody struct {
	ImageId *string `json:"imageId,omitempty"`

	// Preset Name of the preset (variant set), if used
	Preset *string `json:"preset,omitempty"`
}

// ConfirmUploadJSONRequestBody defines body for ConfirmUpload for application/json ContentType.
type ConfirmUploadJSONRequestBody = ConfirmRequest

// CreatePresignJSONRequestBody defines body for CreatePresign for application/json ContentType.
type CreatePresignJSONRequestBody = PresignRequest

// PromoteImagesJSONRequestBody defines body for PromoteImages for application/json ContentType.
type PromoteImagesJSONRequestBody = PromoteRequest

// UpdateImageJSONRequestBody defines body for UpdateImage for application/json ContentType.
type UpdateImageJSONRequestBody = ImagePatch

// ProcessImageJSONRequestBody defines body for ProcessImage for application/json ContentType.
type ProcessImageJSONRequestBody ProcessImageJSONBody
